Data is retrieved from the SandSnap server's query page (https://services6.arcgis.com/rZL2YPlohtwSQBWu/arcgis/rest/services/survey123_402b0c9d9dfe4bcc8b4b7d6873c710fe_fieldworker/FeatureServer/query) using a Python program. This program uses the requests library (https://pypi.org/project/requests/) to send a get request to the SandSnap API and output the results into a local file. The program can filter results from the API, for example giving only the data points with valid calculated grain sizes or SandSnaps within a specific area. The response from the server is then converted to JavaScript Object Notation, or json, format and saved in the file specified by the SAVE_FILE_PATH variable. It also strips away the extra formatting information before saving the data for easier readability. The function can save data in either json or csv format, but defaults to json. As of right now, I do not have a computer with Python installed, so I am unable to test the code. However, I am testing query formatting directly through the SandSnap website, and have been able to set up a default filter that gives only data points without errors. 
A set of unit tests was developed to ensure the query code runs correctly. This includes running the query function with both correct and incorrect parameters. The tests then check for proper error handling and compare data returned by the functions to known data from the SandSnap website to ensure that it's working properly. 